// Code generated by protoc-gen-go. DO NOT EDIT.
// source: license.proto

package grpc

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import timestamp "github.com/golang/protobuf/ptypes/timestamp"
import _ "github.com/grpc-ecosystem/grpc-gateway/protoc-gen-swagger/options"
import _ "google.golang.org/genproto/googleapis/api/annotations"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Rate_Unit int32

const (
	Rate_rps Rate_Unit = 0
	Rate_rpm Rate_Unit = 1
	Rate_rph Rate_Unit = 2
	Rate_rpd Rate_Unit = 3
	Rate_rpw Rate_Unit = 4
)

var Rate_Unit_name = map[int32]string{
	0: "rps",
	1: "rpm",
	2: "rph",
	3: "rpd",
	4: "rpw",
}

var Rate_Unit_value = map[string]int32{
	"rps": 0,
	"rpm": 1,
	"rph": 2,
	"rpd": 3,
	"rpw": 4,
}

func (x Rate_Unit) String() string {
	return proto.EnumName(Rate_Unit_name, int32(x))
}

func (Rate_Unit) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_090c1f856632b222, []int{1, 0}
}

type Contract struct {
	Since                *timestamp.Timestamp `protobuf:"bytes,1,opt,name=since,proto3" json:"since,omitempty"`
	Until                *timestamp.Timestamp `protobuf:"bytes,2,opt,name=until,proto3" json:"until,omitempty"`
	Rate                 *Rate                `protobuf:"bytes,3,opt,name=rate,proto3" json:"rate,omitempty"`
	Requests             uint32               `protobuf:"varint,4,opt,name=requests,proto3" json:"requests,omitempty"`
	Workplaces           uint32               `protobuf:"varint,5,opt,name=workplaces,proto3" json:"workplaces,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *Contract) Reset()         { *m = Contract{} }
func (m *Contract) String() string { return proto.CompactTextString(m) }
func (*Contract) ProtoMessage()    {}
func (*Contract) Descriptor() ([]byte, []int) {
	return fileDescriptor_090c1f856632b222, []int{0}
}
func (m *Contract) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Contract.Unmarshal(m, b)
}
func (m *Contract) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Contract.Marshal(b, m, deterministic)
}
func (m *Contract) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Contract.Merge(m, src)
}
func (m *Contract) XXX_Size() int {
	return xxx_messageInfo_Contract.Size(m)
}
func (m *Contract) XXX_DiscardUnknown() {
	xxx_messageInfo_Contract.DiscardUnknown(m)
}

var xxx_messageInfo_Contract proto.InternalMessageInfo

func (m *Contract) GetSince() *timestamp.Timestamp {
	if m != nil {
		return m.Since
	}
	return nil
}

func (m *Contract) GetUntil() *timestamp.Timestamp {
	if m != nil {
		return m.Until
	}
	return nil
}

func (m *Contract) GetRate() *Rate {
	if m != nil {
		return m.Rate
	}
	return nil
}

func (m *Contract) GetRequests() uint32 {
	if m != nil {
		return m.Requests
	}
	return 0
}

func (m *Contract) GetWorkplaces() uint32 {
	if m != nil {
		return m.Workplaces
	}
	return 0
}

type Rate struct {
	Value                uint32    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	Unit                 Rate_Unit `protobuf:"varint,2,opt,name=unit,proto3,enum=grpc.Rate_Unit" json:"unit,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Rate) Reset()         { *m = Rate{} }
func (m *Rate) String() string { return proto.CompactTextString(m) }
func (*Rate) ProtoMessage()    {}
func (*Rate) Descriptor() ([]byte, []int) {
	return fileDescriptor_090c1f856632b222, []int{1}
}
func (m *Rate) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Rate.Unmarshal(m, b)
}
func (m *Rate) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Rate.Marshal(b, m, deterministic)
}
func (m *Rate) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Rate.Merge(m, src)
}
func (m *Rate) XXX_Size() int {
	return xxx_messageInfo_Rate.Size(m)
}
func (m *Rate) XXX_DiscardUnknown() {
	xxx_messageInfo_Rate.DiscardUnknown(m)
}

var xxx_messageInfo_Rate proto.InternalMessageInfo

func (m *Rate) GetValue() uint32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func (m *Rate) GetUnit() Rate_Unit {
	if m != nil {
		return m.Unit
	}
	return Rate_rps
}

type CreateLicenseRequest struct {
	Id                   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Contract             *Contract `protobuf:"bytes,2,opt,name=contract,proto3" json:"contract,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *CreateLicenseRequest) Reset()         { *m = CreateLicenseRequest{} }
func (m *CreateLicenseRequest) String() string { return proto.CompactTextString(m) }
func (*CreateLicenseRequest) ProtoMessage()    {}
func (*CreateLicenseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_090c1f856632b222, []int{2}
}
func (m *CreateLicenseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLicenseRequest.Unmarshal(m, b)
}
func (m *CreateLicenseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLicenseRequest.Marshal(b, m, deterministic)
}
func (m *CreateLicenseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLicenseRequest.Merge(m, src)
}
func (m *CreateLicenseRequest) XXX_Size() int {
	return xxx_messageInfo_CreateLicenseRequest.Size(m)
}
func (m *CreateLicenseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLicenseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLicenseRequest proto.InternalMessageInfo

func (m *CreateLicenseRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateLicenseRequest) GetContract() *Contract {
	if m != nil {
		return m.Contract
	}
	return nil
}

type CreateLicenseResponse struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CreateLicenseResponse) Reset()         { *m = CreateLicenseResponse{} }
func (m *CreateLicenseResponse) String() string { return proto.CompactTextString(m) }
func (*CreateLicenseResponse) ProtoMessage()    {}
func (*CreateLicenseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_090c1f856632b222, []int{3}
}
func (m *CreateLicenseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateLicenseResponse.Unmarshal(m, b)
}
func (m *CreateLicenseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateLicenseResponse.Marshal(b, m, deterministic)
}
func (m *CreateLicenseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateLicenseResponse.Merge(m, src)
}
func (m *CreateLicenseResponse) XXX_Size() int {
	return xxx_messageInfo_CreateLicenseResponse.Size(m)
}
func (m *CreateLicenseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateLicenseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CreateLicenseResponse proto.InternalMessageInfo

func (m *CreateLicenseResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *CreateLicenseResponse) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

type ReadLicenseRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadLicenseRequest) Reset()         { *m = ReadLicenseRequest{} }
func (m *ReadLicenseRequest) String() string { return proto.CompactTextString(m) }
func (*ReadLicenseRequest) ProtoMessage()    {}
func (*ReadLicenseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_090c1f856632b222, []int{4}
}
func (m *ReadLicenseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadLicenseRequest.Unmarshal(m, b)
}
func (m *ReadLicenseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadLicenseRequest.Marshal(b, m, deterministic)
}
func (m *ReadLicenseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadLicenseRequest.Merge(m, src)
}
func (m *ReadLicenseRequest) XXX_Size() int {
	return xxx_messageInfo_ReadLicenseRequest.Size(m)
}
func (m *ReadLicenseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadLicenseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadLicenseRequest proto.InternalMessageInfo

func (m *ReadLicenseRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type ReadLicenseResponse struct {
	Id                   string               `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Contract             *Contract            `protobuf:"bytes,2,opt,name=contract,proto3" json:"contract,omitempty"`
	CreatedAt            *timestamp.Timestamp `protobuf:"bytes,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,4,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	DeletedAt            *timestamp.Timestamp `protobuf:"bytes,5,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *ReadLicenseResponse) Reset()         { *m = ReadLicenseResponse{} }
func (m *ReadLicenseResponse) String() string { return proto.CompactTextString(m) }
func (*ReadLicenseResponse) ProtoMessage()    {}
func (*ReadLicenseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_090c1f856632b222, []int{5}
}
func (m *ReadLicenseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadLicenseResponse.Unmarshal(m, b)
}
func (m *ReadLicenseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadLicenseResponse.Marshal(b, m, deterministic)
}
func (m *ReadLicenseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadLicenseResponse.Merge(m, src)
}
func (m *ReadLicenseResponse) XXX_Size() int {
	return xxx_messageInfo_ReadLicenseResponse.Size(m)
}
func (m *ReadLicenseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadLicenseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadLicenseResponse proto.InternalMessageInfo

func (m *ReadLicenseResponse) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *ReadLicenseResponse) GetContract() *Contract {
	if m != nil {
		return m.Contract
	}
	return nil
}

func (m *ReadLicenseResponse) GetCreatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.CreatedAt
	}
	return nil
}

func (m *ReadLicenseResponse) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

func (m *ReadLicenseResponse) GetDeletedAt() *timestamp.Timestamp {
	if m != nil {
		return m.DeletedAt
	}
	return nil
}

type UpdateLicenseRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Contract             []byte   `protobuf:"bytes,2,opt,name=contract,proto3" json:"contract,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateLicenseRequest) Reset()         { *m = UpdateLicenseRequest{} }
func (m *UpdateLicenseRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateLicenseRequest) ProtoMessage()    {}
func (*UpdateLicenseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_090c1f856632b222, []int{6}
}
func (m *UpdateLicenseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateLicenseRequest.Unmarshal(m, b)
}
func (m *UpdateLicenseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateLicenseRequest.Marshal(b, m, deterministic)
}
func (m *UpdateLicenseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateLicenseRequest.Merge(m, src)
}
func (m *UpdateLicenseRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateLicenseRequest.Size(m)
}
func (m *UpdateLicenseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateLicenseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateLicenseRequest proto.InternalMessageInfo

func (m *UpdateLicenseRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *UpdateLicenseRequest) GetContract() []byte {
	if m != nil {
		return m.Contract
	}
	return nil
}

type UpdateLicenseResponse struct {
	UpdatedAt            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *UpdateLicenseResponse) Reset()         { *m = UpdateLicenseResponse{} }
func (m *UpdateLicenseResponse) String() string { return proto.CompactTextString(m) }
func (*UpdateLicenseResponse) ProtoMessage()    {}
func (*UpdateLicenseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_090c1f856632b222, []int{7}
}
func (m *UpdateLicenseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateLicenseResponse.Unmarshal(m, b)
}
func (m *UpdateLicenseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateLicenseResponse.Marshal(b, m, deterministic)
}
func (m *UpdateLicenseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateLicenseResponse.Merge(m, src)
}
func (m *UpdateLicenseResponse) XXX_Size() int {
	return xxx_messageInfo_UpdateLicenseResponse.Size(m)
}
func (m *UpdateLicenseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateLicenseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateLicenseResponse proto.InternalMessageInfo

func (m *UpdateLicenseResponse) GetUpdatedAt() *timestamp.Timestamp {
	if m != nil {
		return m.UpdatedAt
	}
	return nil
}

type DeleteLicenseRequest struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteLicenseRequest) Reset()         { *m = DeleteLicenseRequest{} }
func (m *DeleteLicenseRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteLicenseRequest) ProtoMessage()    {}
func (*DeleteLicenseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_090c1f856632b222, []int{8}
}
func (m *DeleteLicenseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteLicenseRequest.Unmarshal(m, b)
}
func (m *DeleteLicenseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteLicenseRequest.Marshal(b, m, deterministic)
}
func (m *DeleteLicenseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteLicenseRequest.Merge(m, src)
}
func (m *DeleteLicenseRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteLicenseRequest.Size(m)
}
func (m *DeleteLicenseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteLicenseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteLicenseRequest proto.InternalMessageInfo

func (m *DeleteLicenseRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type DeleteLicenseResponse struct {
	DeletedAt            *timestamp.Timestamp `protobuf:"bytes,1,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *DeleteLicenseResponse) Reset()         { *m = DeleteLicenseResponse{} }
func (m *DeleteLicenseResponse) String() string { return proto.CompactTextString(m) }
func (*DeleteLicenseResponse) ProtoMessage()    {}
func (*DeleteLicenseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_090c1f856632b222, []int{9}
}
func (m *DeleteLicenseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteLicenseResponse.Unmarshal(m, b)
}
func (m *DeleteLicenseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteLicenseResponse.Marshal(b, m, deterministic)
}
func (m *DeleteLicenseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteLicenseResponse.Merge(m, src)
}
func (m *DeleteLicenseResponse) XXX_Size() int {
	return xxx_messageInfo_DeleteLicenseResponse.Size(m)
}
func (m *DeleteLicenseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteLicenseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteLicenseResponse proto.InternalMessageInfo

func (m *DeleteLicenseResponse) GetDeletedAt() *timestamp.Timestamp {
	if m != nil {
		return m.DeletedAt
	}
	return nil
}

type RegisterLicenseRequest struct {
	Id                   string    `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Contract             *Contract `protobuf:"bytes,2,opt,name=contract,proto3" json:"contract,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *RegisterLicenseRequest) Reset()         { *m = RegisterLicenseRequest{} }
func (m *RegisterLicenseRequest) String() string { return proto.CompactTextString(m) }
func (*RegisterLicenseRequest) ProtoMessage()    {}
func (*RegisterLicenseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_090c1f856632b222, []int{10}
}
func (m *RegisterLicenseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterLicenseRequest.Unmarshal(m, b)
}
func (m *RegisterLicenseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterLicenseRequest.Marshal(b, m, deterministic)
}
func (m *RegisterLicenseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterLicenseRequest.Merge(m, src)
}
func (m *RegisterLicenseRequest) XXX_Size() int {
	return xxx_messageInfo_RegisterLicenseRequest.Size(m)
}
func (m *RegisterLicenseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterLicenseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterLicenseRequest proto.InternalMessageInfo

func (m *RegisterLicenseRequest) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *RegisterLicenseRequest) GetContract() *Contract {
	if m != nil {
		return m.Contract
	}
	return nil
}

type RegisterLicenseResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RegisterLicenseResponse) Reset()         { *m = RegisterLicenseResponse{} }
func (m *RegisterLicenseResponse) String() string { return proto.CompactTextString(m) }
func (*RegisterLicenseResponse) ProtoMessage()    {}
func (*RegisterLicenseResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_090c1f856632b222, []int{11}
}
func (m *RegisterLicenseResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RegisterLicenseResponse.Unmarshal(m, b)
}
func (m *RegisterLicenseResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RegisterLicenseResponse.Marshal(b, m, deterministic)
}
func (m *RegisterLicenseResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RegisterLicenseResponse.Merge(m, src)
}
func (m *RegisterLicenseResponse) XXX_Size() int {
	return xxx_messageInfo_RegisterLicenseResponse.Size(m)
}
func (m *RegisterLicenseResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_RegisterLicenseResponse.DiscardUnknown(m)
}

var xxx_messageInfo_RegisterLicenseResponse proto.InternalMessageInfo

func init() {
	proto.RegisterType((*Contract)(nil), "grpc.Contract")
	proto.RegisterType((*Rate)(nil), "grpc.Rate")
	proto.RegisterType((*CreateLicenseRequest)(nil), "grpc.CreateLicenseRequest")
	proto.RegisterType((*CreateLicenseResponse)(nil), "grpc.CreateLicenseResponse")
	proto.RegisterType((*ReadLicenseRequest)(nil), "grpc.ReadLicenseRequest")
	proto.RegisterType((*ReadLicenseResponse)(nil), "grpc.ReadLicenseResponse")
	proto.RegisterType((*UpdateLicenseRequest)(nil), "grpc.UpdateLicenseRequest")
	proto.RegisterType((*UpdateLicenseResponse)(nil), "grpc.UpdateLicenseResponse")
	proto.RegisterType((*DeleteLicenseRequest)(nil), "grpc.DeleteLicenseRequest")
	proto.RegisterType((*DeleteLicenseResponse)(nil), "grpc.DeleteLicenseResponse")
	proto.RegisterType((*RegisterLicenseRequest)(nil), "grpc.RegisterLicenseRequest")
	proto.RegisterType((*RegisterLicenseResponse)(nil), "grpc.RegisterLicenseResponse")
	proto.RegisterEnum("grpc.Rate_Unit", Rate_Unit_name, Rate_Unit_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LicenseClient is the client API for License service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LicenseClient interface {
	Create(ctx context.Context, in *CreateLicenseRequest, opts ...grpc.CallOption) (*CreateLicenseResponse, error)
	Read(ctx context.Context, in *ReadLicenseRequest, opts ...grpc.CallOption) (*ReadLicenseResponse, error)
	Update(ctx context.Context, in *UpdateLicenseRequest, opts ...grpc.CallOption) (*UpdateLicenseResponse, error)
	Delete(ctx context.Context, in *DeleteLicenseRequest, opts ...grpc.CallOption) (*DeleteLicenseResponse, error)
	Register(ctx context.Context, in *RegisterLicenseRequest, opts ...grpc.CallOption) (*RegisterLicenseResponse, error)
}

type licenseClient struct {
	cc *grpc.ClientConn
}

func NewLicenseClient(cc *grpc.ClientConn) LicenseClient {
	return &licenseClient{cc}
}

func (c *licenseClient) Create(ctx context.Context, in *CreateLicenseRequest, opts ...grpc.CallOption) (*CreateLicenseResponse, error) {
	out := new(CreateLicenseResponse)
	err := c.cc.Invoke(ctx, "/grpc.License/Create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *licenseClient) Read(ctx context.Context, in *ReadLicenseRequest, opts ...grpc.CallOption) (*ReadLicenseResponse, error) {
	out := new(ReadLicenseResponse)
	err := c.cc.Invoke(ctx, "/grpc.License/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *licenseClient) Update(ctx context.Context, in *UpdateLicenseRequest, opts ...grpc.CallOption) (*UpdateLicenseResponse, error) {
	out := new(UpdateLicenseResponse)
	err := c.cc.Invoke(ctx, "/grpc.License/Update", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *licenseClient) Delete(ctx context.Context, in *DeleteLicenseRequest, opts ...grpc.CallOption) (*DeleteLicenseResponse, error) {
	out := new(DeleteLicenseResponse)
	err := c.cc.Invoke(ctx, "/grpc.License/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *licenseClient) Register(ctx context.Context, in *RegisterLicenseRequest, opts ...grpc.CallOption) (*RegisterLicenseResponse, error) {
	out := new(RegisterLicenseResponse)
	err := c.cc.Invoke(ctx, "/grpc.License/Register", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LicenseServer is the server API for License service.
type LicenseServer interface {
	Create(context.Context, *CreateLicenseRequest) (*CreateLicenseResponse, error)
	Read(context.Context, *ReadLicenseRequest) (*ReadLicenseResponse, error)
	Update(context.Context, *UpdateLicenseRequest) (*UpdateLicenseResponse, error)
	Delete(context.Context, *DeleteLicenseRequest) (*DeleteLicenseResponse, error)
	Register(context.Context, *RegisterLicenseRequest) (*RegisterLicenseResponse, error)
}

func RegisterLicenseServer(s *grpc.Server, srv LicenseServer) {
	s.RegisterService(&_License_serviceDesc, srv)
}

func _License_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateLicenseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LicenseServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.License/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LicenseServer).Create(ctx, req.(*CreateLicenseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _License_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadLicenseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LicenseServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.License/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LicenseServer).Read(ctx, req.(*ReadLicenseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _License_Update_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateLicenseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LicenseServer).Update(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.License/Update",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LicenseServer).Update(ctx, req.(*UpdateLicenseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _License_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteLicenseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LicenseServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.License/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LicenseServer).Delete(ctx, req.(*DeleteLicenseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _License_Register_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterLicenseRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LicenseServer).Register(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpc.License/Register",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LicenseServer).Register(ctx, req.(*RegisterLicenseRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _License_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpc.License",
	HandlerType: (*LicenseServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Create",
			Handler:    _License_Create_Handler,
		},
		{
			MethodName: "Read",
			Handler:    _License_Read_Handler,
		},
		{
			MethodName: "Update",
			Handler:    _License_Update_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _License_Delete_Handler,
		},
		{
			MethodName: "Register",
			Handler:    _License_Register_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "license.proto",
}

func init() { proto.RegisterFile("license.proto", fileDescriptor_090c1f856632b222) }

var fileDescriptor_090c1f856632b222 = []byte{
	// 796 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x55, 0x4f, 0x6f, 0xe3, 0x44,
	0x14, 0xc7, 0x89, 0xd3, 0xcd, 0x3e, 0x68, 0x37, 0x0c, 0xe9, 0x6e, 0xd6, 0x5b, 0x8a, 0x65, 0x2e,
	0xab, 0x15, 0xb1, 0x77, 0xd3, 0x3d, 0x6c, 0x39, 0x91, 0x2e, 0x7f, 0x2a, 0xc1, 0x01, 0x99, 0xf6,
	0x00, 0x51, 0x55, 0x4d, 0xec, 0x89, 0x3b, 0xd4, 0xf1, 0xb8, 0x33, 0xe3, 0x14, 0x51, 0xe5, 0xd2,
	0x23, 0x17, 0xa4, 0xf2, 0x01, 0x10, 0x5f, 0x87, 0x2b, 0x5f, 0x81, 0x2b, 0xdf, 0x01, 0x65, 0x66,
	0x9c, 0xb6, 0xa9, 0xab, 0x92, 0x4b, 0xc5, 0xc9, 0x6f, 0xe6, 0xbd, 0xdf, 0xfb, 0xbd, 0x7f, 0xf3,
	0x0c, 0xab, 0x29, 0x8d, 0x48, 0x26, 0x88, 0x9f, 0x73, 0x26, 0x19, 0xb2, 0x13, 0x9e, 0x47, 0xce,
	0x46, 0xc2, 0x58, 0x92, 0x92, 0x00, 0xe7, 0x34, 0xc0, 0x59, 0xc6, 0x24, 0x96, 0x94, 0x65, 0x42,
	0xdb, 0x38, 0x1f, 0x19, 0xad, 0x3a, 0x0d, 0x8b, 0x51, 0x20, 0xe9, 0x98, 0x08, 0x89, 0xc7, 0xb9,
	0x31, 0xf8, 0x44, 0x7d, 0xa2, 0x6e, 0x42, 0xb2, 0xae, 0x38, 0xc5, 0x49, 0x42, 0x78, 0xc0, 0x72,
	0xe5, 0xe2, 0xa6, 0x3b, 0xef, 0x4f, 0x0b, 0x9a, 0x6f, 0x59, 0x26, 0x39, 0x8e, 0x24, 0x7a, 0x09,
	0x0d, 0x41, 0xb3, 0x88, 0x74, 0x2c, 0xd7, 0x7a, 0xfe, 0x6e, 0xcf, 0xf1, 0x35, 0x97, 0x5f, 0x72,
	0xf9, 0x7b, 0x25, 0x57, 0xa8, 0x0d, 0x67, 0x88, 0x22, 0x93, 0x34, 0xed, 0xd4, 0xee, 0x46, 0x28,
	0x43, 0xb4, 0x09, 0x36, 0xc7, 0x92, 0x74, 0xea, 0x0a, 0x00, 0xfe, 0x2c, 0x65, 0x3f, 0xc4, 0x92,
	0x84, 0xea, 0x1e, 0x39, 0xd0, 0xe4, 0xe4, 0xa4, 0x20, 0x42, 0x8a, 0x8e, 0xed, 0x5a, 0xcf, 0x57,
	0xc3, 0xf9, 0x19, 0x6d, 0x02, 0x9c, 0x32, 0x7e, 0x9c, 0xa7, 0x38, 0x22, 0xa2, 0xd3, 0x50, 0xda,
	0x2b, 0x37, 0xde, 0x04, 0xec, 0x99, 0x27, 0xd4, 0x86, 0xc6, 0x04, 0xa7, 0x85, 0xce, 0x63, 0x35,
	0xd4, 0x07, 0xf4, 0x31, 0xd8, 0x45, 0x46, 0xa5, 0x0a, 0x75, 0xad, 0xf7, 0xe8, 0x92, 0xd9, 0xdf,
	0xcf, 0xa8, 0x0c, 0x95, 0xd2, 0xdb, 0x02, 0x7b, 0x76, 0x42, 0x0f, 0xa0, 0xce, 0x73, 0xd1, 0x7a,
	0x47, 0x0b, 0xe3, 0x96, 0xa5, 0x85, 0xa3, 0x56, 0x4d, 0x0b, 0x71, 0xab, 0xae, 0x85, 0xd3, 0x96,
	0xed, 0xfd, 0x6e, 0x41, 0xfb, 0x2d, 0x27, 0x58, 0x92, 0x6f, 0x74, 0x3f, 0x43, 0x1d, 0x31, 0x1a,
	0x40, 0x8d, 0xc6, 0x2a, 0x8a, 0x87, 0x3b, 0x5f, 0x5f, 0xf4, 0x77, 0x7f, 0xb1, 0xbe, 0x18, 0xbc,
	0xec, 0x6e, 0xf7, 0xbb, 0x5f, 0x1e, 0x9c, 0xbd, 0x99, 0x76, 0xe7, 0xf2, 0xeb, 0x69, 0x77, 0xf0,
	0xfa, 0x60, 0x7e, 0xdc, 0x9a, 0x76, 0x07, 0x6f, 0xb6, 0xfb, 0x3b, 0xd7, 0x6f, 0x4a, 0xf9, 0x55,
	0x6f, 0x1a, 0xd6, 0x68, 0x8c, 0x5e, 0x40, 0x33, 0x32, 0x9d, 0x33, 0xe5, 0x5f, 0xd3, 0x39, 0x95,
	0xfd, 0x0c, 0xe7, 0x7a, 0x6f, 0x08, 0xeb, 0x0b, 0x01, 0x8a, 0x9c, 0x65, 0x82, 0xa0, 0xb5, 0xcb,
	0x08, 0x95, 0xd3, 0x6d, 0x80, 0x48, 0x19, 0xc6, 0x87, 0x58, 0xfe, 0x87, 0xae, 0x3e, 0x34, 0xd6,
	0x7d, 0xe9, 0x9d, 0x00, 0x0a, 0x09, 0x8e, 0xef, 0xb1, 0x04, 0xde, 0x79, 0x0d, 0x3e, 0xb8, 0xc6,
	0x79, 0x4b, 0x56, 0x4b, 0x94, 0x6a, 0xa1, 0x02, 0xf5, 0x25, 0x2a, 0x30, 0x83, 0x16, 0x79, 0x5c,
	0x42, 0xed, 0xbb, 0xa1, 0xc6, 0x5a, 0x43, 0x63, 0x92, 0x12, 0x03, 0x6d, 0xdc, 0x0d, 0x35, 0xd6,
	0x7d, 0xe9, 0xfd, 0x6a, 0x41, 0x7b, 0x5f, 0x39, 0xba, 0xcf, 0xe9, 0x73, 0x16, 0x4a, 0xfa, 0xde,
	0x95, 0x69, 0x0b, 0x61, 0x7d, 0x21, 0x20, 0xd3, 0x97, 0xeb, 0x05, 0xb2, 0x96, 0x28, 0x90, 0x27,
	0xa0, 0xfd, 0xb9, 0x4a, 0xf9, 0x3e, 0xe7, 0x2b, 0x84, 0xf5, 0x05, 0xd2, 0xcb, 0x44, 0xae, 0xb4,
	0xcb, 0x5a, 0xa6, 0x5d, 0x7f, 0x58, 0xf0, 0x38, 0x24, 0x09, 0x15, 0x92, 0xf0, 0xff, 0xeb, 0xba,
	0x78, 0x0a, 0x4f, 0x6e, 0x84, 0xa8, 0x33, 0xef, 0xfd, 0x53, 0x87, 0x07, 0xe6, 0x0e, 0xfd, 0x00,
	0x2b, 0x7a, 0xab, 0x20, 0xc7, 0xb8, 0xaa, 0x58, 0x82, 0xce, 0xb3, 0x4a, 0x9d, 0x76, 0xe7, 0x3d,
	0x39, 0xff, 0xeb, 0xef, 0xdf, 0x6a, 0xef, 0x7b, 0x8f, 0xd4, 0xef, 0x6e, 0xf2, 0x2a, 0x30, 0x7f,
	0x44, 0xf4, 0x3d, 0xd8, 0xb3, 0x97, 0x8d, 0x3a, 0x66, 0x4f, 0xdf, 0xd8, 0x2c, 0xce, 0xd3, 0x0a,
	0x8d, 0xf1, 0xba, 0xa1, 0xbc, 0x3e, 0x46, 0xed, 0x05, 0xaf, 0xc1, 0x19, 0x8d, 0xa7, 0xe8, 0x10,
	0x56, 0xf4, 0x78, 0x96, 0x61, 0x57, 0xbd, 0x9e, 0x32, 0xec, 0xca, 0x41, 0x2e, 0x09, 0x9c, 0x5b,
	0x09, 0xf4, 0xd8, 0x94, 0x04, 0x55, 0x93, 0x5b, 0x12, 0x54, 0x0e, 0x58, 0x49, 0xf0, 0xa2, 0x9a,
	0x80, 0x42, 0xb3, 0xec, 0x0f, 0xda, 0x28, 0xcb, 0x50, 0x35, 0x52, 0xce, 0x87, 0xb7, 0x68, 0x0d,
	0x8d, 0xab, 0x68, 0x1c, 0xaf, 0xb3, 0x48, 0xc3, 0x0d, 0x60, 0x67, 0x7a, 0xd1, 0xff, 0x19, 0xfd,
	0x04, 0xcf, 0xfa, 0x51, 0x44, 0x84, 0x70, 0xd5, 0xb0, 0xb0, 0xd4, 0xc5, 0xc2, 0xc5, 0xee, 0x77,
	0x84, 0x4f, 0x68, 0x44, 0xbc, 0x3d, 0xd8, 0xfc, 0xaa, 0xc0, 0x3c, 0x76, 0x73, 0xce, 0x7e, 0x24,
	0x91, 0x74, 0xd9, 0xc8, 0xdd, 0x2d, 0x12, 0xe1, 0x7e, 0x9b, 0x62, 0x39, 0x62, 0x7c, 0x8c, 0xdc,
	0x23, 0x29, 0x73, 0xf1, 0x69, 0x10, 0x24, 0x54, 0x1e, 0x15, 0x43, 0x3f, 0x62, 0xe3, 0xe0, 0x18,
	0x8f, 0x69, 0x2a, 0x8e, 0x83, 0x64, 0x06, 0x75, 0x5a, 0x34, 0x1b, 0xb1, 0xcf, 0x58, 0x24, 0x59,
	0x8a, 0x87, 0x3e, 0xe3, 0x49, 0xaf, 0x1e, 0x93, 0xc9, 0x70, 0x45, 0x3d, 0xa6, 0xad, 0x7f, 0x03,
	0x00, 0x00, 0xff, 0xff, 0x02, 0xe0, 0x70, 0xf2, 0x2a, 0x09, 0x00, 0x00,
}

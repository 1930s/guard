{
  "swagger": "2.0",
  "info": {
    "title": "Access Control as a Service",
    "version": "dev",
    "contact": {
      "name": "Guard project of Hugs Platform",
      "url": "https://github.com/kamilsk/guard",
      "email": "info@octolab.org"
    }
  },
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/license": {
      "post": {
        "operationId": "Create",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufCreateLicenseResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protobufCreateLicenseRequest"
            }
          }
        ],
        "tags": [
          "License"
        ]
      }
    },
    "/api/v1/license/register": {
      "post": {
        "operationId": "Register",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufRegisterLicenseResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protobufRegisterLicenseRequest"
            }
          }
        ],
        "tags": [
          "License"
        ]
      }
    },
    "/api/v1/license/{id}": {
      "get": {
        "operationId": "Read",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufReadLicenseResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "License"
        ]
      },
      "delete": {
        "operationId": "Delete",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufDeleteLicenseResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "License"
        ]
      },
      "put": {
        "operationId": "Update",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufUpdateLicenseResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protobufUpdateLicenseRequest"
            }
          }
        ],
        "tags": [
          "License"
        ]
      },
      "patch": {
        "operationId": "Restore",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufRestoreLicenseResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "License"
        ]
      }
    },
    "/api/v1/license/{id}/employee/{employee}": {
      "delete": {
        "operationId": "DeleteEmployee",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmptyResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employee",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "License"
        ]
      },
      "post": {
        "operationId": "AddEmployee",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmptyResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "employee",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "License"
        ]
      }
    },
    "/api/v1/license/{id}/workplace/{workplace}": {
      "delete": {
        "operationId": "DeleteWorkplace",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmptyResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workplace",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "License"
        ]
      },
      "post": {
        "operationId": "AddWorkplace",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmptyResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workplace",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "License"
        ]
      },
      "put": {
        "operationId": "PushWorkplace",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufEmptyResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "workplace",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "License"
        ]
      }
    },
    "/install": {
      "post": {
        "operationId": "Install",
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/protobufInstallResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protobufInstallRequest"
            }
          }
        ],
        "tags": [
          "Maintenance"
        ],
        "security": []
      }
    }
  },
  "definitions": {
    "RateUnit": {
      "type": "string",
      "enum": [
        "rps",
        "rpm",
        "rph",
        "rpd",
        "rpw"
      ],
      "default": "rps"
    },
    "protobufContract": {
      "type": "object",
      "properties": {
        "since": {
          "type": "string",
          "format": "date-time"
        },
        "until": {
          "type": "string",
          "format": "date-time"
        },
        "rate": {
          "$ref": "#/definitions/protobufRate"
        },
        "requests": {
          "type": "integer",
          "format": "int64"
        },
        "workplaces": {
          "type": "integer",
          "format": "int64"
        }
      }
    },
    "protobufCreateLicenseRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "contract": {
          "$ref": "#/definitions/protobufContract"
        }
      }
    },
    "protobufCreateLicenseResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "protobufDeleteLicenseResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "deleted_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "protobufEmptyResponse": {
      "type": "object"
    },
    "protobufInstallRequest": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/protobufInstallRequestAccount"
        }
      }
    },
    "protobufInstallRequestAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufInstallRequestUser"
          }
        }
      }
    },
    "protobufInstallRequestToken": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "expired_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "protobufInstallRequestUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "tokens": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufInstallRequestToken"
          }
        }
      }
    },
    "protobufInstallResponse": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/protobufInstallResponseAccount"
        }
      }
    },
    "protobufInstallResponseAccount": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "deleted_at": {
          "type": "string",
          "format": "date-time"
        },
        "users": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufInstallResponseUser"
          }
        }
      }
    },
    "protobufInstallResponseToken": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "revoked": {
          "type": "boolean",
          "format": "boolean"
        },
        "expired_at": {
          "type": "string",
          "format": "date-time"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "protobufInstallResponseUser": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "deleted_at": {
          "type": "string",
          "format": "date-time"
        },
        "tokens": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufInstallResponseToken"
          }
        }
      }
    },
    "protobufRate": {
      "type": "object",
      "properties": {
        "value": {
          "type": "integer",
          "format": "int64"
        },
        "unit": {
          "$ref": "#/definitions/RateUnit"
        }
      }
    },
    "protobufReadLicenseResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "contract": {
          "$ref": "#/definitions/protobufContract"
        },
        "created_at": {
          "type": "string",
          "format": "date-time"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        },
        "deleted_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "protobufRegisterLicenseRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "contract": {
          "$ref": "#/definitions/protobufContract"
        }
      }
    },
    "protobufRegisterLicenseResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "protobufRestoreLicenseResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "protobufUpdateLicenseRequest": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "contract": {
          "$ref": "#/definitions/protobufContract"
        }
      }
    },
    "protobufUpdateLicenseResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "updated_at": {
          "type": "string",
          "format": "date-time"
        }
      }
    }
  },
  "securityDefinitions": {
    "Token": {
      "type": "apiKey",
      "description": "value = \u003cstrong\u003eBearer $(GUARD_TOKEN)\u003c/strong\u003e",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "Token": []
    }
  ]
}
